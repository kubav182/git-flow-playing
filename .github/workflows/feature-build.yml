name: Build feature and push docker image

on:
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 10
      - name: run more cmds
        id: gitOuts
        run: |
          git fetch origin/master
          echo "::set-output name=out1::$(echo 1)"
          echo "::set-output name=out2::$(echo 2)"
          echo "::set-output name=out3::$(echo 3)"
      - name: prt
        run: echo "${{ steps.gitOuts.outputs.out1 }} ${{ steps.gitOuts.outputs.out2 }} ${{ steps.gitOuts.outputs.out3 }}"
      - name: Get commit message1
        id: commitMessage
        run: echo "::set-output name=COMMIT_MESSAGE::$(git log --no-merges -1 --oneline)"
      - name: print cmsg
        run: echo "${{ steps.commitMessage.outputs.COMMIT_MESSAGE }}"
      - if: contains(steps.commitMessage.outputs.COMMIT_MESSAGE, '--push-docker') || contains(steps.commitMessage.outputs.COMMIT_MESSAGE, '--deploy-')
        name: cmsg contains
        run: echo "true for contains"
      - if: contains(steps.commitMessage.outputs.COMMIT_MESSAGE, '--deploy-')
        name: get env
        run: echo "::set-env name=DEPLOY_ENV::$(echo '${{ steps.commitMessage.outputs.COMMIT_MESSAGE }}' | sed -n 's/.*--deploy-\([test0|test1|test2|test3|test4|dev1|dev2|dev3|dev4|stage1|stage2|stage3|stage4]*\).*/\1/p')"
      - name: print env
        run: echo "${{env.DEPLOY_ENV}}"
      - name: read diff
        id: diifId
        run: echo "::set-output name=DIFF::$(git log --pretty=format:'%h%x09%an%x09%ai%x09%s' --no-merges origin/master..)"
      - name: print diff
        run: echo "${{ steps.diifId.outputs.DIFF }}"